type Query {
    getAllCards(locale: String, format: Int): [Card]
    getCard(locale: String, format: Int, GrpId: Int): Card
}

type Card {
    GrpId: Int
    ArtId: Int 
    ArtPath: String 
    TitleId: Int 
    Title: String
    AltTitleId: Int 
    AltTitle: String
    FlavorTextId: Int 
    FlavorText: String
    ReminderTextId: Int 
    ReminderText: String
    TypeTextId: Int 
    TypeText: String
    SubtypeTextId: Int
    SubtypeText: String
    ArtistCredit: String
    ArtSize: Int
    Rarity: Int
    ExpansionCode: String
    DigitalReleaseSet: String 
    IsToken: Boolean
    IsPrimaryCard: Boolean
    IsDigitalOnly: Boolean
    IsRebalanced: Boolean
    RebalancedCardGrpId: Int 
    DefunctRebalancedCardGrpId: Int 
    AlternateDeckLimit: Int 
    CollectorNumber: String 
    CollectorMax: String 
    UsesSideboard: Boolean
    OldSchoolManaText: String 
    LinkedFaceType: Int 
    RawFrameDetail: String 
    Watermark: String 
    TextChangeData: String 
    Power: String 
    Toughness: String 
    Colors: String 
    ColorIdentity: String 
    FrameColors: String 
    IndicatorColors: String 
    Types: String 
    Subtypes: String 
    Supertypes: String 
    AbilityIds: String 
    HiddenAbilityIds: String 
    LinkedFaceGrpIds: String 
    LinkedAbilityTemplateCardGrpIds: String 
    AbilityIdToLinkedTokenGrpId: String 
    AbilityIdToLinkedConjurations: String 
    KnownSupportedStyles: String 
    AdditionalFrameDetails: String 
    ExtraFrameDetails: String 
    Tags: String 
    Order_LandLast: Int 
    Order_ColorOrder: Int 
    Order_CreaturesFirst: Int 
    Order_ManaCostDifficulty: Int 
    Order_CMCWithXLast: Int 
    Order_Title: String 
    Order_MythicToCommon: Int 
    Order_BasicLandsFirst: Int
}